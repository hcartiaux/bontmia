.\" Text automatically generated by txt2man
.TH bontmia 1 "09 June 2025" "" ""
.SH NAME
\fBbontmia \fP- Backup Over Network To Multiple Incremental Archives
\fB
.SH SYNOPSIS
.nf
.fam C
\fBbontmia\fP \fB--dest\fP <dest. \fIdir\fP> [\fIoptions\fP] [\fIsource\fP \fIdir\fP [\fIsource\fP \fIdir\fP \.\.\.]]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION

\fBbontmia\fP is a network-based backup tool that saves configurable numbers of last
month, week, day, hour, and minute backups. Each backup is a complete snapshot
of the original directories. Only new and changed files are copied over the
network when generating a snapshot. Remote access is implemented securely using
ssh. Unchanged files are stored as hard links in the archive and therefore takes
virtually no space.
.PP
The backups are stored in a directory structure in the format YYYY/MM/DD/HH:MM.
Each directory contains a snapshot of the backed up directories. This is stored
incrementally by letting every file not changed between backups be a hard link
to the same file in the previous backup. The actual copying is done with rsync.
To avoid typing in a password you do as usual with ssh by generating a public key
on the host where the backup is stored, read the manual page for ssh, and adding
this to the list of authorized hosts on the remote computer, read the manual
page for sshd.
.PP
Which backup to store for how long is configurable, see below.
.PP
The return value is 0 on success and 1 if backing up one of the sources failed.
.PP
The destination can not be remote. If you want to place the backup on a remote
server, then run \fBbontmia\fP as a command with ssh:
.PP
.nf
.fam C
      $ ssh user@host.domain bontmia <options>

.fam T
.fi
Use at your own risk.
.SH ARGUMENTS

\fB--dest\fP <\fIdir\fP>
.PP
.nf
.fam C
    Sets the destination directories where the backups is placed.
    WARNING! existing files in this directory will be DELETED!

.fam T
.fi
.SH OPTIONS

\fB--rotation\fP <spec>
.PP
Specifies the number of backups in each category to save.
The 'spec' is of the form
.PP
[0-9]*minutes[0-9]*hours[0-9]*days[0-9]*weeks[0-9]*month[0-9]*years
.PP
So 0minutes0hours7days4weeks12month2years is an example for a daily backup.
Bontmia should be run in cron or manually, the numbers given here only
specifies how many backups to save.
.PP
The different categories (minutes, hours \.\.\.) are just overlapping filters.
More than one filter might match a backup and a backup is removed when no
filter matches the backup any more.
.PP
For example, if the number of days is 3, the last backup within each of the
last 3 days when backup were done will be kept. If you do your backups like
this (where y means the backup were done and - means it were not), on day 5,
the backups of day 2, 4 and 5 will be saved and the backup of day 0 will be
removed.
.PP
.nf
.fam C
    day:    0 1 2 3 4 5
    backup: y - y - y y

.fam T
.fi
Use the dryrun option below to experiment and learn more about this option.
.PP
\fB--dryrun\fP
.PP
When this option is used, the backup is not performed, but the backups to be
removed are listed. This is handy when you want to ensure that you do not
remove all the precious backups when used in combination with the rotation
option.
.PP
\fB--bwlimit\fP <number>
.PP
Specifies a maximum transfer rate in kilobytes per second. This option is
most effective with large files (several megabytes and up). Due to the nature
of rsync transfers, blocks of data are sent, then if rsync determines the
transfer was too fast, it will wait before sending the next data block. The
result is an average transfer rate equalling the specified limit. A value of
zero specifies no limit. The default is no limit.
.PP
\fB--temp\fP <temp \fIdir\fP>
.PP
Specifies the directory used for temporary files during transfer.
NB! This MUST be on the same disk volume as destination or incremental copy
will not work.
.PP
\fB--port\fP <number>
.PP
Specifies the port number to connect to on the remote host when using ssh,
which is the only option.
.PP
\fB--cipher\fP <cipher_spec>
.PP
Selects the cipher specification for encrypting the ssh session. Refer to
\fBssh\fP(1) and \fBssh_config\fP(5) for a list of supported ciphers.
.PP
\fB--identity\fP <file>
.PP
Specifies the private key file for ssh
.PP
\fB--exclude-from\fP <file>
.PP
Read rsync exclude patterns from file
.PP
\fB--sudo\fP
.PP
Execute rsync with sudo on remote
.PP
\fB--stats\fP
.PP
Output rsync stats at the end
.PP
\fB--compression\fP
.PP
Enable rsync compression, can be useful over a slow network link or
counterproductive over a fast link.
.SH ENVIRONMENT

.SS  RSYNC_CMD

\fBbontmia\fP uses any rsync parameters specified in this variable.
.SH EXAMPLES

Short examples and explanations:
.RE
.PP

.nf
.fam C
      $ bontmia --dest ./backup --rotation 5minutes0hours0days0weeks0month0years foo@bar:/baz/zoot

.fam T
.fi
.RS
A backup of foo@bar:/baz/zoot is made in the directory ./backup on the
local host. If this command is run every minute, \fBbontmia\fP keeps a backup for
every minute for the last 5 minutes. If it is run once every day, \fBbontmia\fP will
keep the last 5 backups done at unique minutes.
.PP
Hint: set the values for times shorter than the interval used
when doing backup to 0.
.RE
.PP

.nf
.fam C
      $ bontmia --dest ./backup --rotation 0minutes0hours7days4weeks12month0years foo@bar:/baz/zoot

.fam T
.fi
.RS
Here there will at the most be stored 7 + 4 + 12 backups (minus overlap between
the backups). This can be a good command to run nightly.
.RE
.PP

.nf
.fam C
      $ bontmia --dest ./backup --rotation 0minutes24hours7days4weeks12month0years foo@bar:/baz/zoot

.fam T
.fi
.RS
This is for running every hour. Remember that only the changes are transferred
and running more than every hour is not necessarily will mean copying more data
over the network.
.RE
.PP

.nf
.fam C
      $ bontmia --dryrun --dest ./backup --rotation 0minutes24hours7days4weeks12month0years /home/bar/baz foo.no:/var/db

.fam T
.fi
.RS
With the dryrun option, \fBbontmia\fP shows what would happen if the backup
were run. No action on the file system will be done.
.PP
When \fBbontmia\fP runs, it sends its output to the standard output. If you do not
want this you can redirect it to /dev/null.
.SH MANPAGE

The manpage has been generated with this command
.PP
.nf
.fam C
      $ bontmia | txt2man -t bontmia -B bontmia -s 1 > bontmia.1

.fam T
.fi
.SH SEE ALSO
\fBrsync\fP(1) \fBssh\fP(1) \fBssh_config\fP(5)
.SH CONTACT
Bontmia was written in april 2003 by John Enok Vollestad <john.enok@vollestad.no>
to merge the functionality of glastree and rsync in one application with a more
flexible selection of long term storage. It has later undergone some bugfixes
and enhancements.
.PP
This version is a fork, the diff can be found on github: https://github.com/hcartiaux/\fBbontmia\fP
